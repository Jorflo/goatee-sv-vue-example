import React from "react";
import { ChangeEvent } from "react";

type TestProps = {
    label?: string;
    error?: boolean;
    errorTriggered: any;
};


export class Test extends React.Component<TestProps> {
    state = { 
        inp: this.props.label,
        error: this.props.error,
    };


      

    onChange = (event: ChangeEvent<HTMLInputElement>) => {
        this.setState(() => ({
            inp: event.target.value
        }));
    };
    triggerError = () => {
        this.setState(() => ({
            error: true,
        }));
        this.props.errorTriggered(true)
    }

    classes = () => {
        return `test ${this.state.error ? 'test--error' : ''}`
    }

    render() {
      return (
        <div className={this.classes()}>
            <h2>Test component to test props and events</h2>
            <span> Prop label: <strong>{this.state.inp}</strong></span>
            <br></br><br></br><br></br>
            <input type="text" value={this.state.inp} onChange={this.onChange} />
            <br></br><br></br><br></br>
            <button onClick={this.triggerError} >Click to trigger error</button>
            {this.state.error &&
            <div>
                <p>Only visible if error triggered</p>
            </div>  
            }
        </div>
      );
    }
  }